# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: write
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore 
    - name: Build
      run: dotnet publish steam-app.Gtk/steam-app.Gtk.csproj --no-restore -c Release -o ./release /property:GenerateFullPaths=true /consoleloggerparameters:NoSummary

    - uses: actions/upload-artifact@v4
      with:
        name: my-artifact
        path: ./release/steam-app.Gtk
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v0.0.${{ github.run_number }}
        release_name: Release 0.0.${{ github.run_number }}
        body: |
          Changes in this Release
           - First Change
           - Second Change
        draft: true
        prerelease: true

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./release/steam-app.Gtk
        asset_name: steam-app-v0.0.${{ github.run_number }}.Gtk
        asset_content_type: application/x-wxecuteable
